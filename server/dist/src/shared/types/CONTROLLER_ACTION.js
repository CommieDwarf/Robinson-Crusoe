"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CONTROLLER_ACTION_OBJECT = exports.OTHER_CONTROLLER_ACTION = exports.TILE_CONTROLLER_ACTION = exports.MYSTERY_CONTROLLER_ACTION = exports.CHARACTER_CONTROLLER_ACTION = exports.ACTION_CONTROLLER_ACTION = void 0;
var ACTION_CONTROLLER_ACTION;
(function (ACTION_CONTROLLER_ACTION) {
    ACTION_CONTROLLER_ACTION["SET_BIBLE_USAGE"] = "set bible usage";
    ACTION_CONTROLLER_ACTION["SET_NEXT_ACTION"] = "set next action";
    ACTION_CONTROLLER_ACTION["ROLL_ACTION_DICES"] = "roll action dices";
    ACTION_CONTROLLER_ACTION["RESOLVE_ACTION"] = "resolve action";
    ACTION_CONTROLLER_ACTION["RESOLVE_ADVENTURE"] = "resolve adventure";
    ACTION_CONTROLLER_ACTION["REROLL_SUCCESS"] = "reroll success";
    ACTION_CONTROLLER_ACTION["REROLL_ACTION_DICE"] = "reroll dice";
})(ACTION_CONTROLLER_ACTION || (exports.ACTION_CONTROLLER_ACTION = ACTION_CONTROLLER_ACTION = {}));
var CHARACTER_CONTROLLER_ACTION;
(function (CHARACTER_CONTROLLER_ACTION) {
    CHARACTER_CONTROLLER_ACTION["MOVE_PAWN"] = "set pawn";
    CHARACTER_CONTROLLER_ACTION["REMOVE_HEALTH_THRESHOLD"] = "remove health threshold";
    CHARACTER_CONTROLLER_ACTION["USE_ABILITY"] = "use ability";
})(CHARACTER_CONTROLLER_ACTION || (exports.CHARACTER_CONTROLLER_ACTION = CHARACTER_CONTROLLER_ACTION = {}));
var MYSTERY_CONTROLLER_ACTION;
(function (MYSTERY_CONTROLLER_ACTION) {
    MYSTERY_CONTROLLER_ACTION["RESOLVE_EVENT_MYSTERY"] = "resolve event mystery";
    MYSTERY_CONTROLLER_ACTION["TRIGGER_MYSTERY_DRAW_EFFECT"] = "trigger mystery draw effect";
    MYSTERY_CONTROLLER_ACTION["USE_TREASURE_CARD"] = "use treasure card";
    MYSTERY_CONTROLLER_ACTION["DRAW_MYSTERY_CARD"] = "draw mystery card";
    MYSTERY_CONTROLLER_ACTION["FINISH_DRAWING_MYSTERY_CARDS"] = "finish drawing mystery cards";
    MYSTERY_CONTROLLER_ACTION["MANAGE_CARD_STORAGE"] = "manage card storage";
})(MYSTERY_CONTROLLER_ACTION || (exports.MYSTERY_CONTROLLER_ACTION = MYSTERY_CONTROLLER_ACTION = {}));
var TILE_CONTROLLER_ACTION;
(function (TILE_CONTROLLER_ACTION) {
    TILE_CONTROLLER_ACTION["TRIGGER_TILE_ACTION"] = "trigger tile action";
    TILE_CONTROLLER_ACTION["TRIGGER_TILE_RESOURCE_ACTION"] = "trigger tile resource action";
    TILE_CONTROLLER_ACTION["MOVE_CAMP"] = "move camp";
})(TILE_CONTROLLER_ACTION || (exports.TILE_CONTROLLER_ACTION = TILE_CONTROLLER_ACTION = {}));
var OTHER_CONTROLLER_ACTION;
(function (OTHER_CONTROLLER_ACTION) {
    OTHER_CONTROLLER_ACTION["ADD_WOOD_TO_PILE"] = "add wood to pile";
    OTHER_CONTROLLER_ACTION["RESOLVE_EVENT_ADVENTURE"] = "resolve event adventure";
    OTHER_CONTROLLER_ACTION["ROLL_WEATHER_DICES"] = "roll weather dices";
    OTHER_CONTROLLER_ACTION["SET_NEXT_PHASE"] = "set next phase";
    OTHER_CONTROLLER_ACTION["SWITCH_COMMITTED_RESOURCES_TYPE"] = "switch committed resources type";
    OTHER_CONTROLLER_ACTION["USE_INVENTION"] = "use invention";
    OTHER_CONTROLLER_ACTION["USE_ITEM"] = "use item";
    OTHER_CONTROLLER_ACTION["USE_DISCOVERY_TOKEN"] = "use discovery token";
    OTHER_CONTROLLER_ACTION["PICK_OBJECT"] = "pick object";
})(OTHER_CONTROLLER_ACTION || (exports.OTHER_CONTROLLER_ACTION = OTHER_CONTROLLER_ACTION = {}));
exports.CONTROLLER_ACTION_OBJECT = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, ACTION_CONTROLLER_ACTION), CHARACTER_CONTROLLER_ACTION), MYSTERY_CONTROLLER_ACTION), TILE_CONTROLLER_ACTION), OTHER_CONTROLLER_ACTION);
//# sourceMappingURL=CONTROLLER_ACTION.js.map